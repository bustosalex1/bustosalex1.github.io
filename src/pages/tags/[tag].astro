---
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostEntry from "@components/PostEntry.astro";
import { CollectionEntry, getCollection } from "astro:content";

export const getStaticPaths = async () => {
    const allPosts = await getCollection("posts");
    const uniqueTags: string[] = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag)
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
};

interface TagProps {
    posts: CollectionEntry<"posts">[];
}

const { tag } = Astro.params;
const { posts } = Astro.props as TagProps;

const formattedTag = tag
    ?.split(" ")
    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))
    .join(" ");
---

<BaseLayout pageTitle={`Tag: ${formattedTag}`}>
    <div class="font-bold">
        Posts tagged with <span class="capitalize">{tag}</span>
    </div>
    <div class="flex flex-col gap-4">
        {
            posts.map((post) => (
                <PostEntry
                    url={"/posts/" + post.slug}
                    title={post.data.title}
                    date={post.data.pubDate}
                    tags={post.data.tags}
                />
            ))
        }
    </div>
</BaseLayout>
